% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/full_pipeline.R
\name{pipeline}
\alias{pipeline}
\title{Run Analysis Pipeline on Calcium Imaging Data}
\usage{
pipeline(
  calcium_matrix,
  coordinates,
  dendrogram = FALSE,
  correlation_threshold = 0.3,
  frame_rate = 0.5
)
}
\arguments{
\item{calcium_matrix}{A matrix where each row represents a cell and each column represents a timepoint.}

\item{coordinates}{A data frame containing X and Y coordinates for each cell. Must include columns "X", "Y", and "Cell".}

\item{dendrogram}{A logical value indicating whether to include a dendrogram in the population activity plot. Defaults to FALSE.}

\item{correlation_threshold}{A numeric value specifying the threshold for filtering edges by weight in the network analysis. Set to "none" to disable filtering. Defaults to 0.3.}

\item{frame_rate}{A numeric value specifying the frame rate (in Hz) for the PSD analysis. Defaults to 0.5.}
}
\value{
A list containing the results of each analysis step, including plots.
\itemize{
  \item \code{normalized_matrix}: The normalized calcium matrix.
  \item \code{binarized_matrix}: The binarized calcium matrix.
  \item \code{population_activity_plot}: The population activity plot.
  \item \code{network}: The network object created from the binarized matrix.
  \item \code{network_plot}: The plot of the network graph.
  \item \code{degree_plot}: The degree distribution plot of the network.
  \item \code{pca_plot}: The scree plot from PCA analysis.
  \item \code{psd_plot}: The power spectral density (PSD) plot.
}
}
\description{
This function runs a comprehensive analysis pipeline on calcium imaging data, including normalization, binarization,
population activity plotting, network creation and plotting, PCA analysis, power spectral density (PSD) analysis,
and degree distribution analysis. The function requires the user to provide coordinates for the cells.
}
\examples{
calcium_matrix <- matrix(runif(1000), nrow = 10)
coordinates <- data.frame(X = runif(10), Y = runif(10), Cell = 1:10)
results <- pipeline(calcium_matrix, coordinates = coordinates)
}
